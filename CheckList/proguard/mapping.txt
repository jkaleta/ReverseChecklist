com.commonsware.cwac.tlv.R -> com.commonsware.cwac.tlv.a:
com.commonsware.cwac.tlv.R$styleable -> com.commonsware.cwac.tlv.b:
    int[] TouchListView -> a
com.commonsware.cwac.tlv.TouchListView -> com.commonsware.cwac.tlv.TouchListView:
    android.widget.ImageView mDragView -> a
    android.view.WindowManager mWindowManager -> b
    android.view.WindowManager$LayoutParams mWindowParams -> c
    int mDragPos -> d
    int mFirstDragPos -> e
    int mDragPoint -> f
    int mCoordOffset -> g
    com.commonsware.cwac.tlv.TouchListView$DragListener mDragListener -> h
    com.commonsware.cwac.tlv.TouchListView$DropListener mDropListener -> i
    com.commonsware.cwac.tlv.TouchListView$RemoveListener mRemoveListener -> j
    int mUpperBound -> k
    int mLowerBound -> l
    int mHeight -> m
    android.view.GestureDetector mGestureDetector -> n
    int mRemoveMode -> o
    android.graphics.Rect mTempRect -> p
    android.graphics.Bitmap mDragBitmap -> q
    int mTouchSlop -> r
    int mItemHeightNormal -> s
    int mItemHeightExpanded -> t
    int grabberId -> u
    int dragndropBackgroundColor -> v
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> addHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean isDraggableRow(android.view.View) -> a
    void setGrabberIcon$13462e() -> a
    void unExpandViews(boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void stopDragging() -> b
    void setDropListener(com.commonsware.cwac.tlv.TouchListView$DropListener) -> a
    android.widget.ImageView access$0(com.commonsware.cwac.tlv.TouchListView) -> a
    android.graphics.Rect access$1(com.commonsware.cwac.tlv.TouchListView) -> b
    void access$2(com.commonsware.cwac.tlv.TouchListView) -> c
    com.commonsware.cwac.tlv.TouchListView$RemoveListener access$3(com.commonsware.cwac.tlv.TouchListView) -> d
    int access$4(com.commonsware.cwac.tlv.TouchListView) -> e
    void access$5$ae1b180(com.commonsware.cwac.tlv.TouchListView) -> f
com.commonsware.cwac.tlv.TouchListView$1 -> com.commonsware.cwac.tlv.c:
    com.commonsware.cwac.tlv.TouchListView this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.commonsware.cwac.tlv.TouchListView$DragListener -> com.commonsware.cwac.tlv.d:
com.commonsware.cwac.tlv.TouchListView$DropListener -> com.commonsware.cwac.tlv.e:
    void drop(int,int) -> a
com.commonsware.cwac.tlv.TouchListView$RemoveListener -> com.commonsware.cwac.tlv.f:
com.jakubkaleta.checklist.ActivityList -> com.jakubkaleta.checklist.ActivityList:
    android.content.res.Resources resources -> b
    android.widget.Spinner sortOptionsSpinner -> c
    android.widget.SimpleCursorAdapter activityListAdapter -> a
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> d
    java.lang.String TAG -> e
    java.lang.String[] PROJECTION -> f
    int ADDED_NEW_ACTIVITY -> g
    int UPDATED_ACTIVITY -> h
    int COPIED_ACTIVITY -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void bindTheList() -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.content.res.Resources access$0(com.jakubkaleta.checklist.ActivityList) -> a
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService access$1(com.jakubkaleta.checklist.ActivityList) -> b
    void access$2(com.jakubkaleta.checklist.ActivityList) -> c
    void access$3(com.jakubkaleta.checklist.ActivityList) -> d
    android.widget.Spinner access$4(com.jakubkaleta.checklist.ActivityList) -> e
    java.lang.String access$5(com.jakubkaleta.checklist.ActivityList) -> f
com.jakubkaleta.checklist.ActivityList$1 -> com.jakubkaleta.checklist.a:
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.jakubkaleta.checklist.ActivityList$2 -> com.jakubkaleta.checklist.b:
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jakubkaleta.checklist.ActivityList$3 -> com.jakubkaleta.checklist.c:
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    void onChange(boolean) -> onChange
    boolean deliverSelfNotifications() -> deliverSelfNotifications
com.jakubkaleta.checklist.ActivityList$4 -> com.jakubkaleta.checklist.d:
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.jakubkaleta.checklist.ActivityList$5 -> com.jakubkaleta.checklist.e:
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    android.net.Uri val$uriToBeDeleted -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.jakubkaleta.checklist.ActivityList$CopyListArgs -> com.jakubkaleta.checklist.f:
    long listId -> b
    java.lang.String newListName -> c
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    java.lang.String getName() -> a
    long getId() -> b
com.jakubkaleta.checklist.ActivityList$CopyListTask -> com.jakubkaleta.checklist.g:
    android.app.ProgressDialog dialog -> b
    com.jakubkaleta.checklist.ActivityList this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jakubkaleta.checklist.AddEditActivity -> com.jakubkaleta.checklist.AddEditActivity:
    android.widget.Button addEditActivity -> a
    android.widget.EditText activityName -> b
    android.widget.TextView addMultipleItemsHint -> c
    long activity_id -> d
    java.lang.String mode -> e
    android.content.res.Resources resources -> f
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> g
    java.lang.String[] PROJECTION -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.jakubkaleta.checklist.AddEditActivity) -> a
    java.lang.String access$1(com.jakubkaleta.checklist.AddEditActivity) -> b
    long access$2(com.jakubkaleta.checklist.AddEditActivity) -> c
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService access$3(com.jakubkaleta.checklist.AddEditActivity) -> d
    android.content.res.Resources access$4(com.jakubkaleta.checklist.AddEditActivity) -> e
com.jakubkaleta.checklist.AddEditActivity$1 -> com.jakubkaleta.checklist.h:
    com.jakubkaleta.checklist.AddEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditActivity$2 -> com.jakubkaleta.checklist.i:
    com.jakubkaleta.checklist.AddEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditActivity$3 -> com.jakubkaleta.checklist.j:
    com.jakubkaleta.checklist.AddEditActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.jakubkaleta.checklist.AddEditCategory -> com.jakubkaleta.checklist.AddEditCategory:
    long activity_id -> a
    long category_id -> b
    java.lang.String mode -> c
    android.widget.Button addEditCategory -> d
    android.widget.EditText categoryName -> e
    android.widget.TextView addMultipleItemsHint -> f
    android.content.res.Resources resources -> g
    java.lang.String[] CATEGORY_PROJECTION -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.widget.EditText access$0(com.jakubkaleta.checklist.AddEditCategory) -> a
    long access$1(com.jakubkaleta.checklist.AddEditCategory) -> b
    java.lang.String access$2(com.jakubkaleta.checklist.AddEditCategory) -> c
    long access$3(com.jakubkaleta.checklist.AddEditCategory) -> d
    android.widget.Button access$4(com.jakubkaleta.checklist.AddEditCategory) -> e
    void access$5(com.jakubkaleta.checklist.AddEditCategory) -> f
com.jakubkaleta.checklist.AddEditCategory$1 -> com.jakubkaleta.checklist.k:
    com.jakubkaleta.checklist.AddEditCategory this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditCategory$2 -> com.jakubkaleta.checklist.l:
    com.jakubkaleta.checklist.AddEditCategory this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.jakubkaleta.checklist.AddEditCategory$3 -> com.jakubkaleta.checklist.m:
    com.jakubkaleta.checklist.AddEditCategory this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditEntry -> com.jakubkaleta.checklist.AddEditEntry:
    long activity_id -> a
    android.widget.EditText entryName -> b
    android.widget.Button addEditEntry -> c
    android.widget.Spinner spinnerCategories -> d
    android.widget.TextView addMultipleItemsHint -> e
    long entry_id -> f
    long category_id -> g
    java.lang.String mode -> h
    android.content.res.Resources resources -> i
    java.lang.String[] CATEGORY_PROJECTION -> j
    java.lang.String[] ENTRY_PROJECTION -> k
    int ADDED_NEW_CATEGORY -> l
    int EDITED_EXISTING_CATEGORY -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onResume() -> onResume
    void bindCategoryDropdown() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.jakubkaleta.checklist.AddEditEntry) -> a
    android.widget.EditText access$1(com.jakubkaleta.checklist.AddEditEntry) -> b
    android.widget.Spinner access$2(com.jakubkaleta.checklist.AddEditEntry) -> c
    java.lang.String access$3(com.jakubkaleta.checklist.AddEditEntry) -> d
    long access$4(com.jakubkaleta.checklist.AddEditEntry) -> e
    android.widget.Button access$5(com.jakubkaleta.checklist.AddEditEntry) -> f
com.jakubkaleta.checklist.AddEditEntry$1 -> com.jakubkaleta.checklist.n:
    com.jakubkaleta.checklist.AddEditEntry this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditEntry$2 -> com.jakubkaleta.checklist.o:
    com.jakubkaleta.checklist.AddEditEntry this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.AddEditEntry$3 -> com.jakubkaleta.checklist.p:
    com.jakubkaleta.checklist.AddEditEntry this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.jakubkaleta.checklist.AddEditEntry$myOnItemSelectedListener -> com.jakubkaleta.checklist.q:
    com.jakubkaleta.checklist.AddEditEntry this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.jakubkaleta.checklist.AllToDoItemsReport -> com.jakubkaleta.checklist.AllToDoItemsReport:
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> b
    long activity_id -> c
    java.lang.String TAG -> d
    java.lang.String[] PROJECTION -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.Boolean singleActivityReport() -> a
    void access$0$ab4af9e(com.jakubkaleta.checklist.AllToDoItemsReport,long) -> a
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService access$1(com.jakubkaleta.checklist.AllToDoItemsReport) -> a
com.jakubkaleta.checklist.AllToDoItemsReport$1 -> com.jakubkaleta.checklist.r:
    com.jakubkaleta.checklist.AllToDoItemsReport this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jakubkaleta.checklist.AllToDoItemsReport$2 -> com.jakubkaleta.checklist.s:
    com.jakubkaleta.checklist.AllToDoItemsReport this$0 -> a
    long val$id -> b
    boolean val$selected -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.jakubkaleta.checklist.CategoryList -> com.jakubkaleta.checklist.CategoryList:
    android.widget.SimpleCursorAdapter categoryListAdapter -> a
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> b
    java.lang.String TAG -> c
    long activityId -> d
    java.lang.String[] CATEGORY_PROJECTION -> e
    com.commonsware.cwac.tlv.TouchListView$DropListener onDrop -> f
    int ADDED_NEW_CATEGORY -> g
    int EDITED_EXISTING_CATEGORY -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService access$0(com.jakubkaleta.checklist.CategoryList) -> a
    long access$1(com.jakubkaleta.checklist.CategoryList) -> b
com.jakubkaleta.checklist.CategoryList$1 -> com.jakubkaleta.checklist.t:
    com.jakubkaleta.checklist.CategoryList this$0 -> a
    void drop(int,int) -> a
com.jakubkaleta.checklist.CategoryList$2 -> com.jakubkaleta.checklist.u:
    com.jakubkaleta.checklist.CategoryList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jakubkaleta.checklist.CategoryList$3 -> com.jakubkaleta.checklist.v:
    com.jakubkaleta.checklist.CategoryList this$0 -> a
    android.net.Uri val$uriToBeDeleted -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.jakubkaleta.checklist.Configuration -> com.jakubkaleta.checklist.Configuration:
    java.lang.String[] CONFIGURATION_PROJECTION -> a
    android.widget.CheckBox disablePromptsInToDoMode -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.CheckBox access$0(com.jakubkaleta.checklist.Configuration) -> a
com.jakubkaleta.checklist.Configuration$ConfigClickListener -> com.jakubkaleta.checklist.w:
    com.jakubkaleta.checklist.Configuration this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder -> com.jakubkaleta.checklist.DataAccess.a:
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder ShortestListsFirst -> a
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder LongestListsFirst -> b
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder LeastToDoFirst -> c
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder MostToDoFirst -> d
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder AlphabeticallyAsc -> e
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder AlphabeticallyDesc -> f
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder DateAddedAsc -> g
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder DateAddedDesc -> h
    java.lang.String sortString -> i
    int enumIndex -> j
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder[] ENUM$VALUES -> k
    java.lang.String toSortString() -> a
    int toNumber() -> b
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder fromNumber(int) -> a
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder[] values() -> values
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder valueOf(java.lang.String) -> valueOf
com.jakubkaleta.checklist.DataAccess.CategorySortOrder -> com.jakubkaleta.checklist.DataAccess.b:
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder AlphabeticallyAsc -> a
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder AlphabeticallyDesc -> b
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder Custom -> c
    java.lang.String sortString -> d
    int enumIndex -> e
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder[] ENUM$VALUES -> f
    java.lang.String toSortString() -> a
    int toNumber() -> b
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder fromNumber(int) -> a
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder[] values() -> values
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder valueOf(java.lang.String) -> valueOf
com.jakubkaleta.checklist.DataAccess.ChecklistDataProvider -> com.jakubkaleta.checklist.DataAccess.ChecklistDataProvider:
    android.content.UriMatcher sUriMatcher -> a
    java.util.HashMap sActivitiesProjectionMap -> b
    java.util.HashMap sCategoriesProjectionMap -> c
    java.util.HashMap sApplicationStateProjectionMap -> d
    java.util.HashMap sEntriesProjectionMap -> e
    java.util.HashMap sConfigProjectionMap -> f
    java.lang.String activitiesLeftOuterJoinCategories -> g
    java.lang.String categoriesLeftOuterJoinEntries -> h
    java.lang.String categoriesInnerJoinActivities -> i
    java.lang.String entriesInnerJoinCategories -> j
    java.lang.String entriesInnerJoinActivityStatistics -> k
    com.jakubkaleta.checklist.DataAccess.DatabaseOpenHelper mOpenHelper -> l
    boolean onCreate() -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.jakubkaleta.checklist.DataAccess.DatabaseOpenHelper -> com.jakubkaleta.checklist.DataAccess.c:
    void insertCategory$2f3ad127(android.database.sqlite.SQLiteDatabase,int,java.lang.String) -> a
    void insertEntry(android.database.sqlite.SQLiteDatabase,int,java.lang.String) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.jakubkaleta.checklist.DataAccess.beans.ActivitiesDataSource -> com.jakubkaleta.checklist.DataAccess.a.a:
    java.util.HashMap existingActivities -> a
    java.util.HashSet existingActivitiesNames -> b
    java.util.HashMap newActivities -> c
    void addActivity(com.jakubkaleta.checklist.DataAccess.beans.ActivityBean) -> a
    java.util.List getActivities() -> a
    java.util.List getNewActivities() -> b
    com.jakubkaleta.checklist.DataAccess.beans.ActivityBean getActivity(long) -> a
    com.jakubkaleta.checklist.DataAccess.beans.ActivityBean getActivity(java.lang.String) -> a
com.jakubkaleta.checklist.DataAccess.beans.ActivityBean -> com.jakubkaleta.checklist.DataAccess.a.b:
    long id -> a
    java.lang.String name -> b
    java.util.HashMap existingCategories -> c
    java.util.HashSet existingCategoriesNames -> d
    java.util.HashMap newCategories -> e
    long getId() -> a
    java.lang.String getName() -> b
    void addCategory(com.jakubkaleta.checklist.DataAccess.beans.CategoryBean) -> a
    java.util.List getCategories() -> c
    java.util.List getNewCategories() -> d
    com.jakubkaleta.checklist.DataAccess.beans.CategoryBean getCategory(long) -> a
    com.jakubkaleta.checklist.DataAccess.beans.CategoryBean getCategory(java.lang.String) -> a
    android.content.ContentValues getInsertContentValues() -> e
com.jakubkaleta.checklist.DataAccess.beans.ApplicationStateBean -> com.jakubkaleta.checklist.DataAccess.a.c:
    long activityId -> a
    long categoryId -> b
    java.lang.String mode -> c
    int activityListSortOrderInt -> d
    long getActivityId() -> a
    long getCategoryId() -> b
    java.lang.String getMode() -> c
    com.jakubkaleta.checklist.DataAccess.ActivityListSortOrder getActivityListSortOrder() -> d
com.jakubkaleta.checklist.DataAccess.beans.CategoryBean -> com.jakubkaleta.checklist.DataAccess.a.d:
    long categoryId -> a
    java.lang.String categoryName -> b
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder sortOrder -> c
    java.util.HashMap existingEntries -> d
    java.util.HashMap existingEntriesNamesAndIds -> e
    java.util.HashMap newEntries -> f
    long getId() -> a
    java.lang.String getName() -> b
    com.jakubkaleta.checklist.DataAccess.CategorySortOrder getSortOrder() -> c
    void setSortOrder(com.jakubkaleta.checklist.DataAccess.CategorySortOrder) -> a
    void addEntry(com.jakubkaleta.checklist.DataAccess.beans.EntryBean) -> a
    java.util.List getEntries() -> d
    java.util.List getNewEntries() -> e
    android.content.ContentValues getInsertContentValues(long) -> a
com.jakubkaleta.checklist.DataAccess.beans.ConfigurationBean -> com.jakubkaleta.checklist.DataAccess.a.e:
    java.lang.Boolean disablePromptInToDoMode -> a
    java.lang.Boolean getDisablePromptInToDoMode() -> a
com.jakubkaleta.checklist.DataAccess.beans.EntryBean -> com.jakubkaleta.checklist.DataAccess.a.f:
    long id -> a
    java.lang.String name -> b
    java.lang.Boolean isSelected -> c
    boolean isDirty -> d
    long getId() -> a
    java.lang.String getName() -> b
    java.lang.Boolean getIsSelected() -> c
    void setIsSelected(boolean) -> a
    boolean getIsDirty() -> d
    android.content.ContentValues getInsertContentValues(int) -> a
    android.content.ContentValues getUpdateContentValues() -> e
com.jakubkaleta.checklist.DataAccess.services.CsvExportImportService -> com.jakubkaleta.checklist.DataAccess.b.a:
    android.content.ContentResolver contentResolver -> b
    com.jakubkaleta.checklist.DataAccess.services.ImportEntryProcessor entryProcessor -> c
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> d
    java.lang.String[] ALL_ITEMS_PROJECTION -> a
    java.lang.Boolean getAllItemsFromAllListsAsCsvData(java.lang.String) -> a
    com.jakubkaleta.checklist.DataAccess.services.ImportResult importDataFromCsvFile(java.lang.String,com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling) -> a
com.jakubkaleta.checklist.DataAccess.services.DataAccessService -> com.jakubkaleta.checklist.DataAccess.b.b:
    android.content.ContentResolver contentResolver -> c
    java.lang.String TAG -> d
    java.lang.String[] CONFIGURATION_PROJECTION -> e
    java.lang.String[] STATE_PROJECTION -> f
    java.lang.String[] ALL_TODO_ITEMS_PROJECTION -> a
    java.lang.String[] ALL_ITEMS_PROJECTION -> b
    java.lang.String[] CATEGORY_PROJECTION -> g
    java.lang.String[] ENTRY_PROJECTION -> h
    com.jakubkaleta.checklist.DataAccess.beans.ConfigurationBean getCurrentConfiguration() -> a
    com.jakubkaleta.checklist.DataAccess.beans.ApplicationStateBean getCurrentApplicationState() -> b
    void persistSelectionChangeToTheDatabase(long,boolean) -> a
    android.text.Spanned getAllToDoItemsEmailContent(java.lang.Long) -> a
    int getSelectedItemsCount() -> c
    void updateUserDefinedSort(long,long,int,int) -> a
    void updateUserDefinedSortForEntry(long,long,int,int) -> b
    com.jakubkaleta.checklist.DataAccess.beans.ActivitiesDataSource getActivitiesWithChildren(java.lang.Long[],java.lang.Boolean) -> a
    void insertNewItems(java.util.List) -> a
    void updateExistingItems(com.jakubkaleta.checklist.DataAccess.beans.ActivitiesDataSource) -> a
    java.lang.Boolean checkActivityNameAvailability(java.lang.String,long) -> a
    java.lang.Boolean copyList(long,java.lang.String) -> a
    void markAllItemsSelected(java.lang.Long,java.lang.Boolean) -> a
    void markAllItemsSelectedInCategory(java.lang.Long,java.lang.Boolean) -> b
com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling -> com.jakubkaleta.checklist.DataAccess.b.c:
    com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling MergeExistingAndImportedLists -> a
    com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling RenameImportedList -> b
    com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling[] ENUM$VALUES -> c
    com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling[] values() -> values
    com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling valueOf(java.lang.String) -> valueOf
com.jakubkaleta.checklist.DataAccess.services.ImportEntryProcessor -> com.jakubkaleta.checklist.DataAccess.b.d:
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> a
    com.jakubkaleta.checklist.DataAccess.beans.ActivitiesDataSource processDataImport(java.util.List,com.jakubkaleta.checklist.DataAccess.services.ImportDuplicateHandling) -> a
    java.lang.String verifyNameAvailabilityAndFindNewNameForActivity(java.lang.String) -> a
com.jakubkaleta.checklist.DataAccess.services.ImportResult -> com.jakubkaleta.checklist.DataAccess.b.e:
    com.jakubkaleta.checklist.DataAccess.services.ImportResult ImportSucceeded -> a
    com.jakubkaleta.checklist.DataAccess.services.ImportResult ImportFailedInvalidFileName -> b
    com.jakubkaleta.checklist.DataAccess.services.ImportResult ImportFailedInvalidFileStructure -> c
    com.jakubkaleta.checklist.DataAccess.services.ImportResult ImportFailedNothingToImport -> d
    com.jakubkaleta.checklist.DataAccess.services.ImportResult ImportFailedOtherError -> e
    com.jakubkaleta.checklist.DataAccess.services.ImportResult[] ENUM$VALUES -> f
    com.jakubkaleta.checklist.DataAccess.services.ImportResult[] values() -> values
    com.jakubkaleta.checklist.DataAccess.services.ImportResult valueOf(java.lang.String) -> valueOf
com.jakubkaleta.checklist.DataAccess.tables.ActivityColumns -> com.jakubkaleta.checklist.DataAccess.c.a:
    android.net.Uri CONTENT_URI -> a
com.jakubkaleta.checklist.DataAccess.tables.AppStateColumns -> com.jakubkaleta.checklist.DataAccess.c.b:
    android.net.Uri CONTENT_URI -> a
com.jakubkaleta.checklist.DataAccess.tables.CategoryColumns -> com.jakubkaleta.checklist.DataAccess.c.c:
    android.net.Uri CONTENT_URI -> a
com.jakubkaleta.checklist.DataAccess.tables.ConfigurationParametersColumns -> com.jakubkaleta.checklist.DataAccess.c.d:
    android.net.Uri CONTENT_URI -> a
com.jakubkaleta.checklist.DataAccess.tables.EntryColumns -> com.jakubkaleta.checklist.DataAccess.c.e:
    android.net.Uri CONTENT_URI -> a
com.jakubkaleta.checklist.DatabaseExchange -> com.jakubkaleta.checklist.DatabaseExchange:
    android.content.res.Resources resources -> a
    int PICK_FILE -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.content.res.Resources access$0(com.jakubkaleta.checklist.DatabaseExchange) -> a
    int access$1(com.jakubkaleta.checklist.DatabaseExchange) -> b
com.jakubkaleta.checklist.DatabaseExchange$1 -> com.jakubkaleta.checklist.x:
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DatabaseExchange$2 -> com.jakubkaleta.checklist.y:
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DatabaseExchange$3 -> com.jakubkaleta.checklist.z:
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DatabaseExchange$4 -> com.jakubkaleta.checklist.aa:
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DatabaseExchange$5 -> com.jakubkaleta.checklist.ab:
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onClick(android.view.View) -> onClick
com.jakubkaleta.checklist.DatabaseExchange$ExportDataTask -> com.jakubkaleta.checklist.ac:
    android.app.ProgressDialog dialog -> b
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.jakubkaleta.checklist.DatabaseExchange$ImportDataTask -> com.jakubkaleta.checklist.ad:
    android.app.ProgressDialog dialog -> b
    com.jakubkaleta.checklist.DatabaseExchange this$0 -> a
    int[] $SWITCH_TABLE$com$jakubkaleta$checklist$DataAccess$services$ImportResult -> c
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int[] $SWITCH_TABLE$com$jakubkaleta$checklist$DataAccess$services$ImportResult() -> a
com.jakubkaleta.checklist.EntriesFlipper -> com.jakubkaleta.checklist.EntriesFlipper:
    long currentActivityId -> a
    java.lang.String currentMode -> b
    long currentCategoryId -> c
    java.lang.String TAG -> d
    com.jakubkaleta.checklist.SafeViewFlipper flipper -> e
    android.content.res.Resources resources -> f
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService dataAccessService -> g
    com.jakubkaleta.checklist.EntriesFlipper$ListViewGestureListener gestureListener -> h
    java.util.ArrayList categories -> i
    java.lang.String[] CATEGORY_PROJECTION -> j
    android.widget.Button btnPreviousCategory -> k
    android.widget.Button btnNextCategory -> l
    android.widget.Button btnSelectAllFromCategory -> m
    android.widget.Button btnUnselectAllFromCategory -> n
    android.widget.TextView txtCategoriesInfo -> o
    android.widget.Spinner sortSpinner -> p
    android.util.Pair findCategory(long) -> a
    int getSelectedItemsCount(android.widget.ListView) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void saveState(long,long,java.lang.String) -> a
    void setCurrentCategoryTitleAndInfo$1385ff() -> a
    boolean saveCurrentCategorySortSelection(com.jakubkaleta.checklist.DataAccess.beans.CategoryBean) -> a
    void setUpActivity(long) -> b
    java.lang.Boolean inToDoMode() -> b
    java.lang.Boolean inEditMode() -> c
    com.jakubkaleta.checklist.SafeViewFlipper access$0(com.jakubkaleta.checklist.EntriesFlipper) -> a
    void access$1$4dc5ff07(com.jakubkaleta.checklist.EntriesFlipper) -> b
    void access$2$4dc63b17(com.jakubkaleta.checklist.EntriesFlipper) -> c
    long access$3(com.jakubkaleta.checklist.EntriesFlipper) -> d
    android.util.Pair access$4(com.jakubkaleta.checklist.EntriesFlipper,long) -> a
    boolean access$5(com.jakubkaleta.checklist.EntriesFlipper,com.jakubkaleta.checklist.DataAccess.beans.CategoryBean) -> a
    com.jakubkaleta.checklist.EntriesFlipper$ListViewGestureListener access$6(com.jakubkaleta.checklist.EntriesFlipper) -> e
com.jakubkaleta.checklist.EntriesFlipper$1 -> com.jakubkaleta.checklist.ae:
    com.jakubkaleta.checklist.EntriesFlipper this$0 -> a
    android.net.Uri val$uriToBeDeleted -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.jakubkaleta.checklist.EntriesFlipper$2 -> com.jakubkaleta.checklist.af:
    com.jakubkaleta.checklist.EntriesFlipper this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.jakubkaleta.checklist.EntriesFlipper$3 -> com.jakubkaleta.checklist.ag:
    com.jakubkaleta.checklist.EntriesFlipper this$0 -> a
    void updateMetadata(java.lang.Boolean) -> a
com.jakubkaleta.checklist.EntriesFlipper$4 -> com.jakubkaleta.checklist.ah:
    com.jakubkaleta.checklist.EntriesFlipper this$0 -> a
    long getDisplayedCategoryId() -> a
com.jakubkaleta.checklist.EntriesFlipper$DisplayedCategoryGetter -> com.jakubkaleta.checklist.ai:
    long getDisplayedCategoryId() -> a
com.jakubkaleta.checklist.EntriesFlipper$ListViewGestureListener -> com.jakubkaleta.checklist.aj:
    int SWIPE_MAX_OFF_PATH -> b
    int SWIPE_MIN_DISTANCE -> c
    int SWIPE_THRESHOLD_VELOCITY -> d
    java.lang.String TAG -> e
    com.jakubkaleta.checklist.EntriesFlipper this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.jakubkaleta.checklist.EntriesFlipper$MetadataUpdater -> com.jakubkaleta.checklist.ak:
    void updateMetadata(java.lang.Boolean) -> a
com.jakubkaleta.checklist.EntriesFlipperTab -> com.jakubkaleta.checklist.al:
    com.jakubkaleta.checklist.DataAccess.beans.CategoryBean category -> a
    java.lang.Boolean inToDoMode -> b
    android.content.Context context -> c
    com.jakubkaleta.checklist.EntriesFlipper$MetadataUpdater updater -> d
    java.lang.String TAG -> e
    com.jakubkaleta.checklist.DataAccess.beans.ConfigurationBean currentConfiguration -> f
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService service -> g
    com.jakubkaleta.checklist.EntriesFlipper$DisplayedCategoryGetter categoryGetter -> h
    android.database.Cursor itemsCursor -> i
    com.jakubkaleta.checklist.EntriesFlipperTab$TabContentObserver contentObserver -> j
    android.widget.SimpleCursorAdapter itemListAdapter -> k
    java.lang.String[] ENTRY_PROJECTION -> l
    com.commonsware.cwac.tlv.TouchListView$DropListener onDrop -> m
    void reload(android.view.GestureDetector$SimpleOnGestureListener,com.jakubkaleta.checklist.DataAccess.beans.CategoryBean) -> a
    void load(android.view.GestureDetector$SimpleOnGestureListener) -> a
    void unload() -> b
    android.widget.SimpleCursorAdapter access$0(com.jakubkaleta.checklist.EntriesFlipperTab) -> a
    com.jakubkaleta.checklist.DataAccess.services.DataAccessService access$1(com.jakubkaleta.checklist.EntriesFlipperTab) -> b
    com.jakubkaleta.checklist.DataAccess.beans.CategoryBean access$2(com.jakubkaleta.checklist.EntriesFlipperTab) -> c
    com.jakubkaleta.checklist.EntriesFlipper$DisplayedCategoryGetter access$3(com.jakubkaleta.checklist.EntriesFlipperTab) -> d
    java.lang.String access$4(com.jakubkaleta.checklist.EntriesFlipperTab) -> e
    java.lang.Boolean access$5(com.jakubkaleta.checklist.EntriesFlipperTab) -> f
    void access$6(com.jakubkaleta.checklist.EntriesFlipperTab,long,boolean) -> a
    com.jakubkaleta.checklist.EntriesFlipper$MetadataUpdater access$7(com.jakubkaleta.checklist.EntriesFlipperTab) -> g
com.jakubkaleta.checklist.EntriesFlipperTab$1 -> com.jakubkaleta.checklist.am:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    void drop(int,int) -> a
com.jakubkaleta.checklist.EntriesFlipperTab$2 -> com.jakubkaleta.checklist.an:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.jakubkaleta.checklist.EntriesFlipperTab$3 -> com.jakubkaleta.checklist.ao:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jakubkaleta.checklist.EntriesFlipperTab$4 -> com.jakubkaleta.checklist.ap:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    android.view.GestureDetector val$gestureDetector -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.jakubkaleta.checklist.EntriesFlipperTab$5 -> com.jakubkaleta.checklist.aq:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    long val$id -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.jakubkaleta.checklist.EntriesFlipperTab$TabContentObserver -> com.jakubkaleta.checklist.ar:
    com.jakubkaleta.checklist.EntriesFlipperTab this$0 -> a
    void onChange(boolean) -> onChange
    boolean deliverSelfNotifications() -> deliverSelfNotifications
com.jakubkaleta.checklist.SafeViewFlipper -> com.jakubkaleta.checklist.SafeViewFlipper:
    java.lang.String TAG -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
com.jakubkaleta.checklist.Utilities -> com.jakubkaleta.checklist.as:
    java.lang.String join(java.lang.String,java.lang.Object[]) -> a
